{
  "paragraphs": [
    {
      "text": "%md\n## Welcome to NYC-TLC\n### New York City Taxi Data Analysis",
      "user": "admin",
      "dateUpdated": "2018-11-21 23:30:46.640",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9.0,
        "title": false,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eWelcome to NYC-TLC\u003c/h2\u003e\n\u003ch3\u003eNew York City Taxi Data Analysis\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1542841596932_851464577",
      "id": "20150213-231621_168813393",
      "dateCreated": "2018-11-21 23:06:36.932",
      "dateStarted": "2018-11-21 23:30:46.751",
      "dateFinished": "2018-11-21 23:30:48.987",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nimport scala.collection.mutable.ListBuffer\nimport sqlContext.implicits._\nimport scala.io.Source\n\n\nvar RawTaxiData_ListBuffer \u003d new ListBuffer[java.lang.String]()\nval url \u003d \"https://s3.amazonaws.com/nyc-tlc/trip+data/yellow_tripdata_2018-01.csv\"\n\nval bufferedSource \u003d\nSource.fromURL(url)\n\n\nvar id \u003d 0\nfor (line \u003c- bufferedSource.getLines.take(10000).toList) {\n    //println(line.length())\n    \n    if (line.length() \u003e 0) {\n        val cols \u003d line.split(\",\")\n        RawTaxiData_ListBuffer +\u003d s\"${id},${cols(0)},${cols(1)},${cols(2)},${cols(3)},${cols(4)},${cols(5)},${cols(6)},${cols(7)},${cols(8)},${cols(9)},${cols(10)},${cols(11)},${cols(12)},${cols(13)},${cols(14)},${cols(15)},${cols(16)}\"\n        id \u003d id + 1\n    }\n}\nbufferedSource.close\n\ncase class Taxi(ID: String, VendorID: String, tpep_pickup_datetime: String, tpep_dropoff_datetime: String, passenger_count: String, trip_distance: String, RatecodeID: String, store_and_fwd_flag: String, PULocationID: String, DOLocationID: String, payment_type: String, fare_amount: String, extra: String, mta_tax: String, tip_amount: String, tolls_amount: String, improvement_surcharge: String, total_amount: String)\n\n\nvar stockDF \u003d RawTaxiData_ListBuffer.drop(1)\n\nval demoDS \u003d stockDF.map(line \u003d\u003e {\n    val fields \u003d line.replace(\"\\\"\",\"\").split(\",\")\n    Taxi(fields(0), fields(1), fields(2), fields(3), fields(4), fields(5), fields(6), fields(7), fields(8), fields(9), fields(10), fields(11), fields(12), fields(13), fields(14), fields(15), fields(16), fields(17))\n})\n\n\nval taxiData \u003d demoDS.toDF()\ntaxiData.show()\n\ntaxiData.registerTempTable(\"taxi_data\")",
      "user": "admin",
      "dateUpdated": "2018-11-21 23:41:32.209",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import scala.collection.mutable.ListBuffer\nimport sqlContext.implicits._\nimport scala.io.Source\nRawTaxiData_ListBuffer: scala.collection.mutable.ListBuffer[String] \u003d ListBuffer()\nurl: String \u003d https://s3.amazonaws.com/nyc-tlc/trip+data/yellow_tripdata_2018-01.csv\nbufferedSource: scala.io.BufferedSource \u003d non-empty iterator\nid: Int \u003d 0\ndefined class Taxi\nstockDF: scala.collection.mutable.ListBuffer[String] \u003d ListBuffer(1,1,2018-01-01 00:21:05,2018-01-01 00:24:23,1,.50,1,N,41,24,2,4.5,0.5,0.5,0,0,0.3,5.8, 2,1,2018-01-01 00:44:55,2018-01-01 01:03:05,1,2.70,1,N,239,140,2,14,0.5,0.5,0,0,0.3,15.3, 3,1,2018-01-01 00:08:26,2018-01-01 00:14:21,2,.80,1,N,262,141,1,6,0.5,0.5,1,0,0.3,8.3, 4,1,2018-01-01 00:20:22,2018-01-01 00:52:51,1,10.20,1,N,140,257,2,33.5,0.5,0.5,0,0,0.3,34.8, 5,1,2018-01-01 00:09:18,2018-01-01 00:27:06,2,2.50,1,N,246,239,1,12.5,0.5,0.5,2.75,0,0.3,16.55, 6,1,2018-01-01 00:29:29,2018-01-01 00:32:48,3,.50,1,N,143,143,2,4.5,0.5,0.5,0,0,0.3,5.8, 7,1,2018-01-01 00:38:08,2018-01-01 00:48:24,2,1.70,1,N,50,239,1,9,0.5,0.5,2.05,0,0.3,12.35, 8,1,2018-01-01 00:49:29,2018-01-01 00:51:53,1,.70,1,N,239,238,1,4,0.5,0.5,1,0,0.3,6.3, 9,1,2018-0...demoDS: scala.collection.mutable.ListBuffer[Taxi] \u003d ListBuffer(Taxi(1,1,2018-01-01 00:21:05,2018-01-01 00:24:23,1,.50,1,N,41,24,2,4.5,0.5,0.5,0,0,0.3,5.8), Taxi(2,1,2018-01-01 00:44:55,2018-01-01 01:03:05,1,2.70,1,N,239,140,2,14,0.5,0.5,0,0,0.3,15.3), Taxi(3,1,2018-01-01 00:08:26,2018-01-01 00:14:21,2,.80,1,N,262,141,1,6,0.5,0.5,1,0,0.3,8.3), Taxi(4,1,2018-01-01 00:20:22,2018-01-01 00:52:51,1,10.20,1,N,140,257,2,33.5,0.5,0.5,0,0,0.3,34.8), Taxi(5,1,2018-01-01 00:09:18,2018-01-01 00:27:06,2,2.50,1,N,246,239,1,12.5,0.5,0.5,2.75,0,0.3,16.55), Taxi(6,1,2018-01-01 00:29:29,2018-01-01 00:32:48,3,.50,1,N,143,143,2,4.5,0.5,0.5,0,0,0.3,5.8), Taxi(7,1,2018-01-01 00:38:08,2018-01-01 00:48:24,2,1.70,1,N,50,239,1,9,0.5,0.5,2.05,0,0.3,12.35), Taxi(8,1,2018-01-01 00:49:29,2018-01-01 00:51:53,1,.70,1,N...taxiData: org.apache.spark.sql.DataFrame \u003d [ID: string, VendorID: string ... 16 more fields]\n+---+--------+--------------------+---------------------+---------------+-------------+----------+------------------+------------+------------+------------+-----------+-----+-------+----------+------------+---------------------+------------+\n| ID|VendorID|tpep_pickup_datetime|tpep_dropoff_datetime|passenger_count|trip_distance|RatecodeID|store_and_fwd_flag|PULocationID|DOLocationID|payment_type|fare_amount|extra|mta_tax|tip_amount|tolls_amount|improvement_surcharge|total_amount|\n+---+--------+--------------------+---------------------+---------------+-------------+----------+------------------+------------+------------+------------+-----------+-----+-------+----------+------------+---------------------+------------+\n|  1|       1| 2018-01-01 00:21:05|  2018-01-01 00:24:23|              1|          .50|         1|                 N|          41|          24|           2|        4.5|  0.5|    0.5|         0|           0|                  0.3|         5.8|\n|  2|       1| 2018-01-01 00:44:55|  2018-01-01 01:03:05|              1|         2.70|         1|                 N|         239|         140|           2|         14|  0.5|    0.5|         0|           0|                  0.3|        15.3|\n|  3|       1| 2018-01-01 00:08:26|  2018-01-01 00:14:21|              2|          .80|         1|                 N|         262|         141|           1|          6|  0.5|    0.5|         1|           0|                  0.3|         8.3|\n|  4|       1| 2018-01-01 00:20:22|  2018-01-01 00:52:51|              1|        10.20|         1|                 N|         140|         257|           2|       33.5|  0.5|    0.5|         0|           0|                  0.3|        34.8|\n|  5|       1| 2018-01-01 00:09:18|  2018-01-01 00:27:06|              2|         2.50|         1|                 N|         246|         239|           1|       12.5|  0.5|    0.5|      2.75|           0|                  0.3|       16.55|\n|  6|       1| 2018-01-01 00:29:29|  2018-01-01 00:32:48|              3|          .50|         1|                 N|         143|         143|           2|        4.5|  0.5|    0.5|         0|           0|                  0.3|         5.8|\n|  7|       1| 2018-01-01 00:38:08|  2018-01-01 00:48:24|              2|         1.70|         1|                 N|          50|         239|           1|          9|  0.5|    0.5|      2.05|           0|                  0.3|       12.35|\n|  8|       1| 2018-01-01 00:49:29|  2018-01-01 00:51:53|              1|          .70|         1|                 N|         239|         238|           1|          4|  0.5|    0.5|         1|           0|                  0.3|         6.3|\n|  9|       1| 2018-01-01 00:56:38|  2018-01-01 01:01:05|              1|         1.00|         1|                 N|         238|          24|           1|        5.5|  0.5|    0.5|       1.7|           0|                  0.3|         8.5|\n| 10|       1| 2018-01-01 00:17:04|  2018-01-01 00:22:24|              1|          .70|         1|                 N|         170|         170|           2|        5.5|  0.5|    0.5|         0|           0|                  0.3|         6.8|\n| 11|       1| 2018-01-01 00:41:03|  2018-01-01 00:46:49|              1|          .60|         1|                 N|         162|         229|           1|        5.5|  0.5|    0.5|      1.35|           0|                  0.3|        8.15|\n| 12|       1| 2018-01-01 00:52:54|  2018-01-01 01:17:33|              1|         3.50|         1|                 N|         141|         113|           2|       16.5|  0.5|    0.5|         0|           0|                  0.3|        17.8|\n| 13|       2| 2018-01-01 00:17:54|  2018-01-01 00:22:05|              1|         1.04|         1|                 N|         137|         224|           2|        5.5|  0.5|    0.5|         0|           0|                  0.3|         6.8|\n| 14|       2| 2018-01-01 00:24:47|  2018-01-01 00:34:20|              1|         1.22|         1|                 N|         224|          79|           2|        7.5|  0.5|    0.5|         0|           0|                  0.3|         8.8|\n| 15|       2| 2018-01-01 00:37:57|  2018-01-01 00:53:43|              1|         1.92|         1|                 N|         234|         100|           2|         10|  0.5|    0.5|         0|           0|                  0.3|        11.3|\n| 16|       1| 2018-01-01 00:35:53|  2018-01-01 00:52:59|              1|         5.70|         1|                 N|          13|         189|           1|         19|  0.5|    0.5|      4.05|           0|                  0.3|       24.35|\n| 17|       2| 2018-01-01 00:30:47|  2018-01-01 01:13:20|              1|         3.74|         1|                 N|          48|         236|           1|       25.5|  0.5|    0.5|       6.7|           0|                  0.3|        33.5|\n| 18|       1| 2018-01-01 00:21:45|  2018-01-01 00:25:58|              2|          .60|         1|                 N|         163|         162|           1|        4.5|  0.5|    0.5|       1.7|           0|                  0.3|         7.5|\n| 19|       1| 2018-01-01 00:31:11|  2018-01-01 01:07:56|              1|        10.90|         1|                 N|         229|          61|           2|         35|  0.5|    0.5|         0|           0|                  0.3|        36.3|\n| 20|       2| 2018-01-01 00:15:42|  2018-01-01 00:21:38|              5|         1.22|         1|                 N|         236|          75|           2|          6|  0.5|    0.5|         0|           0|                  0.3|         7.3|\n+---+--------+--------------------+---------------------+---------------+-------------+----------+------------------+------------+------------+------------+-----------+-----+-------+----------+------------+---------------------+------------+\nonly showing top 20 rows\n\nwarning: there was one deprecation warning; re-run with -deprecation for details\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1542841596936_374734793",
      "id": "20181121-152004_799962554",
      "dateCreated": "2018-11-21 23:06:36.936",
      "dateStarted": "2018-11-21 23:31:51.978",
      "dateFinished": "2018-11-21 23:31:57.308",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nimport scala.collection.mutable.ListBuffer\nimport sqlContext.implicits._\nimport scala.io.Source\n\nvar RawZoneData_ListBuffer \u003d new ListBuffer[java.lang.String]()\nval url \u003d \"https://s3.amazonaws.com/nyc-tlc/misc/taxi+_zone_lookup.csv\"\n\nval bufferedSource \u003d Source.fromURL(url)\n\nfor (line \u003c- bufferedSource.getLines) {\n    if (line.length \u003e 0){\n        val cols \u003d line.split(\",\")\n        RawZoneData_ListBuffer +\u003d s\"${cols(0)},${cols(1)},${cols(2)},${cols(3)}\"\n        id \u003d id +1\n    }\n}\n\nbufferedSource.close()\n\ncase class Zone(LocationID: String, Borough: String, Zone: String, service_zone: String)\n\nvar rawDF \u003d RawZoneData_ListBuffer.drop(1)\n\nval zoneDS \u003d rawDF.map(line \u003d\u003e {\n    val fields \u003d line.replace(\"\\\"\",\"\").split(\",\")\n    Zone(fields(0), fields(1), fields(2), fields(3))\n})\n\nval zoneData \u003d zoneDS.toDF()\nzoneData.registerTempTable(\"zone_data\")\nzoneData.show()",
      "user": "admin",
      "dateUpdated": "2018-11-21 23:57:52.564",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import scala.collection.mutable.ListBuffer\nimport sqlContext.implicits._\nimport scala.io.Source\nRawZoneData_ListBuffer: scala.collection.mutable.ListBuffer[String] \u003d ListBuffer()\nurl: String \u003d https://s3.amazonaws.com/nyc-tlc/misc/taxi+_zone_lookup.csv\nbufferedSource: scala.io.BufferedSource \u003d non-empty iterator\ndefined class Zone\nrawDF: scala.collection.mutable.ListBuffer[String] \u003d ListBuffer(1,\"EWR\",\"Newark Airport\",\"EWR\", 2,\"Queens\",\"Jamaica Bay\",\"Boro Zone\", 3,\"Bronx\",\"Allerton/Pelham Gardens\",\"Boro Zone\", 4,\"Manhattan\",\"Alphabet City\",\"Yellow Zone\", 5,\"Staten Island\",\"Arden Heights\",\"Boro Zone\", 6,\"Staten Island\",\"Arrochar/Fort Wadsworth\",\"Boro Zone\", 7,\"Queens\",\"Astoria\",\"Boro Zone\", 8,\"Queens\",\"Astoria Park\",\"Boro Zone\", 9,\"Queens\",\"Auburndale\",\"Boro Zone\", 10,\"Queens\",\"Baisley Park\",\"Boro Zone\", 11,\"Brooklyn\",\"Bath Beach\",\"Boro Zone\", 12,\"Manhattan\",\"Battery Park\",\"Yellow Zone\", 13,\"Manhattan\",\"Battery Park City\",\"Yellow Zone\", 14,\"Brooklyn\",\"Bay Ridge\",\"Boro Zone\", 15,\"Queens\",\"Bay Terrace/Fort Totten\",\"Boro Zone\", 16,\"Queens\",\"Bayside\",\"Boro Zone\", 17,\"Brooklyn\",\"Bedford\",\"Boro Zone\", 18,\"Bronx\",\"Bedfor...zoneDS: scala.collection.mutable.ListBuffer[Zone] \u003d ListBuffer(Zone(1,EWR,Newark Airport,EWR), Zone(2,Queens,Jamaica Bay,Boro Zone), Zone(3,Bronx,Allerton/Pelham Gardens,Boro Zone), Zone(4,Manhattan,Alphabet City,Yellow Zone), Zone(5,Staten Island,Arden Heights,Boro Zone), Zone(6,Staten Island,Arrochar/Fort Wadsworth,Boro Zone), Zone(7,Queens,Astoria,Boro Zone), Zone(8,Queens,Astoria Park,Boro Zone), Zone(9,Queens,Auburndale,Boro Zone), Zone(10,Queens,Baisley Park,Boro Zone), Zone(11,Brooklyn,Bath Beach,Boro Zone), Zone(12,Manhattan,Battery Park,Yellow Zone), Zone(13,Manhattan,Battery Park City,Yellow Zone), Zone(14,Brooklyn,Bay Ridge,Boro Zone), Zone(15,Queens,Bay Terrace/Fort Totten,Boro Zone), Zone(16,Queens,Bayside,Boro Zone), Zone(17,Brooklyn,Bedford,Boro Zone), Zone(18,Bronx,Bedfo...zoneData: org.apache.spark.sql.DataFrame \u003d [LocationID: string, Borough: string ... 2 more fields]\nwarning: there was one deprecation warning; re-run with -deprecation for details\n+----------+-------------+--------------------+------------+\n|LocationID|      Borough|                Zone|service_zone|\n+----------+-------------+--------------------+------------+\n|         1|          EWR|      Newark Airport|         EWR|\n|         2|       Queens|         Jamaica Bay|   Boro Zone|\n|         3|        Bronx|Allerton/Pelham G...|   Boro Zone|\n|         4|    Manhattan|       Alphabet City| Yellow Zone|\n|         5|Staten Island|       Arden Heights|   Boro Zone|\n|         6|Staten Island|Arrochar/Fort Wad...|   Boro Zone|\n|         7|       Queens|             Astoria|   Boro Zone|\n|         8|       Queens|        Astoria Park|   Boro Zone|\n|         9|       Queens|          Auburndale|   Boro Zone|\n|        10|       Queens|        Baisley Park|   Boro Zone|\n|        11|     Brooklyn|          Bath Beach|   Boro Zone|\n|        12|    Manhattan|        Battery Park| Yellow Zone|\n|        13|    Manhattan|   Battery Park City| Yellow Zone|\n|        14|     Brooklyn|           Bay Ridge|   Boro Zone|\n|        15|       Queens|Bay Terrace/Fort ...|   Boro Zone|\n|        16|       Queens|             Bayside|   Boro Zone|\n|        17|     Brooklyn|             Bedford|   Boro Zone|\n|        18|        Bronx|        Bedford Park|   Boro Zone|\n|        19|       Queens|           Bellerose|   Boro Zone|\n|        20|        Bronx|             Belmont|   Boro Zone|\n+----------+-------------+--------------------+------------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1542843528824_-1980182189",
      "id": "20181121-233848_841719643",
      "dateCreated": "2018-11-21 23:38:48.825",
      "dateStarted": "2018-11-21 23:57:39.510",
      "dateFinished": "2018-11-21 23:57:42.337",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.sql \nselect zone_data.Borough, count(taxi_data.ID)\nfrom taxi_data, zone_data\nwhere PULocationID \u003d LocationID\ngroup by Borough\n",
      "user": "admin",
      "dateUpdated": "2018-11-22 00:01:57.633",
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 4.0,
        "editorMode": "ace/mode/sql",
        "fontSize": 9.0,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 366.0,
              "optionOpen": false,
              "setting": {
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default",
                  "stacked": true
                },
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "Borough": "string",
                      "count(ID)": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "pieChart": {},
                "stackedAreaChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "lineChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "Borough",
                  "index": 0.0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "count(ID)",
                  "index": 1.0,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "Borough\tcount(ID)\nQueens\t253\nUnknown\t237\nBrooklyn\t196\nManhattan\t9295\nBronx\t17\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://10.52.0.179:4040/jobs/job?id\u003d16",
            "http://10.52.0.179:4040/jobs/job?id\u003d17",
            "http://10.52.0.179:4040/jobs/job?id\u003d18",
            "http://10.52.0.179:4040/jobs/job?id\u003d19",
            "http://10.52.0.179:4040/jobs/job?id\u003d20",
            "http://10.52.0.179:4040/jobs/job?id\u003d21"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1542841596937_1366823867",
      "id": "20150210-015302_1492795503",
      "dateCreated": "2018-11-21 23:06:36.937",
      "dateStarted": "2018-11-21 23:58:05.999",
      "dateFinished": "2018-11-21 23:58:09.115",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.sql\nselect ID, total_amount\nfrom taxi_data",
      "user": "admin",
      "dateUpdated": "2018-11-21 23:32:08.049",
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 3.0,
        "editorMode": "ace/mode/sql",
        "fontSize": 9.0,
        "results": {
          "0": {
            "graph": {
              "mode": "multiBarChart",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "ID": "string",
                      "total_amount": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "stackedAreaChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "lineChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "ID",
                  "index": 0.0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "total_amount",
                  "index": 1.0,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "ID\ttotal_amount\n1\t5.8\n2\t15.3\n3\t8.3\n4\t34.8\n5\t16.55\n6\t5.8\n7\t12.35\n8\t6.3\n9\t8.5\n10\t6.8\n11\t8.15\n12\t17.8\n13\t6.8\n14\t8.8\n15\t11.3\n16\t24.35\n17\t33.5\n18\t7.5\n19\t36.3\n20\t7.3\n21\t14.3\n22\t10.8\n23\t17.8\n24\t19.3\n25\t15.95\n26\t5.8\n27\t20.76\n28\t6.36\n29\t7.3\n30\t8.8\n31\t8.8\n32\t14.15\n33\t28.8\n34\t6.8\n35\t7.25\n36\t7.56\n37\t14.76\n38\t15.38\n39\t45.38\n40\t13.5\n41\t21\n42\t11.8\n43\t34.56\n44\t12.35\n45\t15.8\n46\t4.3\n47\t8.75\n48\t9.3\n49\t11.8\n50\t13.56\n51\t15.8\n52\t11.15\n53\t14\n54\t10.8\n55\t7.56\n56\t17.16\n57\t9.8\n58\t12.25\n59\t-4.3\n60\t4.3\n61\t18.8\n62\t3.8\n63\t3.8\n64\t15.8\n65\t7.3\n66\t7.8\n67\t6.36\n68\t11.16\n69\t23.75\n70\t6.3\n71\t16\n72\t19\n73\t25.8\n74\t52.8\n75\t20.8\n76\t11.15\n77\t11.6\n78\t9.8\n79\t17.15\n80\t4.8\n81\t9.96\n82\t24.8\n83\t4.8\n84\t8.15\n85\t7.3\n86\t23.75\n87\t15.3\n88\t30.95\n89\t5.3\n90\t8.16\n91\t21.8\n92\t21.84\n93\t11.3\n94\t17.8\n95\t6.3\n96\t10.3\n97\t9.55\n98\t8.15\n99\t7.3\n100\t16.8\n101\t22.8\n102\t10.8\n103\t12.3\n104\t7.8\n105\t42.06\n106\t6.36\n107\t9.12\n108\t8.16\n109\t17.3\n110\t10.3\n111\t18.8\n112\t13.8\n113\t10.8\n114\t18.55\n115\t18.8\n116\t6.8\n117\t6.8\n118\t12.35\n119\t21.05\n120\t29.1\n121\t16.3\n122\t17.85\n123\t17.75\n124\t16.8\n125\t13.8\n126\t16.3\n127\t15.95\n128\t17.3\n129\t10.35\n130\t6.2\n131\t14.65\n132\t11.15\n133\t8.8\n134\t12.8\n135\t23.1\n136\t25.3\n137\t8.15\n138\t21.95\n139\t5.76\n140\t11.3\n141\t12.3\n142\t18.36\n143\t33.3\n144\t17.3\n145\t19.9\n146\t17.75\n147\t9.8\n148\t148.56\n149\t8.3\n150\t16.8\n151\t61.06\n152\t11.33\n153\t12.8\n154\t8.8\n155\t6.36\n156\t19.56\n157\t17.8\n158\t8.8\n159\t43.3\n160\t10.79\n161\t9.8\n162\t34.75\n163\t9.8\n164\t17.8\n165\t5.3\n166\t7.3\n167\t50.76\n168\t7.8\n169\t7.55\n170\t21.8\n171\t8.76\n172\t18.8\n173\t6.8\n174\t90.66\n175\t6.3\n176\t36.8\n177\t9.12\n178\t20.38\n179\t12.36\n180\t20.38\n181\t9.8\n182\t17.3\n183\t22.55\n184\t16.8\n185\t13.8\n186\t7.8\n187\t9.8\n188\t17.8\n189\t4.8\n190\t9.3\n191\t72.8\n192\t6.3\n193\t8.8\n194\t14.8\n195\t14.3\n196\t7.55\n197\t11.3\n198\t12\n199\t8.8\n200\t17.91\n201\t12.8\n202\t8.75\n203\t7.18\n204\t15.35\n205\t17\n206\t14.75\n207\t48.96\n208\t22.99\n209\t3.8\n210\t12.3\n211\t6.35\n212\t10.8\n213\t9.75\n214\t19.55\n215\t11.3\n216\t10.3\n217\t8.75\n218\t8.3\n219\t26.3\n220\t20.8\n221\t18.8\n222\t6.8\n223\t7.56\n224\t11.16\n225\t8.15\n226\t11.8\n227\t14.75\n228\t5.76\n229\t7.8\n230\t10.8\n231\t13.56\n232\t70.26\n233\t8.8\n234\t25.55\n235\t12.43\n236\t16.56\n237\t18.95\n238\t13.8\n239\t14.75\n240\t8.8\n241\t16.56\n242\t21.3\n243\t8.8\n244\t37.87\n245\t6.8\n246\t7.54\n247\t28.3\n248\t7.56\n249\t17.8\n250\t7.8\n251\t15.8\n252\t26.6\n253\t9.3\n254\t15.8\n255\t16.3\n256\t63.36\n257\t37.8\n258\t7.8\n259\t6.96\n260\t25.56\n261\t5.8\n262\t20.16\n263\t15.95\n264\t9.3\n265\t14.3\n266\t10.55\n267\t17.8\n268\t11.16\n269\t42.8\n270\t21.13\n271\t24.95\n272\t13.8\n273\t15.35\n274\t5.75\n275\t9.36\n276\t21.8\n277\t7.8\n278\t6.6\n279\t8.8\n280\t15.3\n281\t12.3\n282\t13.5\n283\t32.25\n284\t5.8\n285\t20\n286\t13.8\n287\t11.16\n288\t12.8\n289\t12.95\n290\t7.8\n291\t33.06\n292\t17.3\n293\t13\n294\t12.3\n295\t11.91\n296\t9.35\n297\t7.3\n298\t25.55\n299\t12.8\n300\t8.8\n301\t8.76\n302\t22.45\n303\t16.8\n304\t20.76\n305\t10.56\n306\t4.56\n307\t7.3\n308\t17.8\n309\t11.8\n310\t12.95\n311\t15.8\n312\t6.2\n313\t8.75\n314\t8.3\n315\t7.3\n316\t7.25\n317\t19.1\n318\t13.8\n319\t22.8\n320\t16.3\n321\t16.55\n322\t23.15\n323\t7.25\n324\t5.8\n325\t26.3\n326\t12.8\n327\t13.3\n328\t28.8\n329\t8.3\n330\t10.3\n331\t28.55\n332\t11.33\n333\t9.49\n334\t52.71\n335\t26\n336\t34.56\n337\t18.36\n338\t7.56\n339\t16.3\n340\t8.75\n341\t7.8\n342\t44.8\n343\t8.3\n344\t31.8\n345\t8.8\n346\t12.88\n347\t6.8\n348\t22.33\n349\t15.8\n350\t66.3\n351\t11.15\n352\t18.8\n353\t16.3\n354\t19.75\n355\t8.8\n356\t9.96\n357\t8.76\n358\t6.96\n359\t19.24\n360\t13.55\n361\t16.62\n362\t16.8\n363\t16.56\n364\t9.8\n365\t14.3\n366\t15.18\n367\t15.34\n368\t14.8\n369\t35.3\n370\t7.55\n371\t12.85\n372\t7.8\n373\t22.56\n374\t9.36\n375\t27.35\n376\t16.3\n377\t15.3\n378\t7.8\n379\t10.35\n380\t35.44\n381\t29.3\n382\t9.8\n383\t9.96\n384\t18.8\n385\t12.96\n386\t9.8\n387\t28.5\n388\t18.36\n389\t17.75\n390\t10.8\n391\t5.3\n392\t73.2\n393\t19.3\n394\t35.35\n395\t5.83\n396\t6\n397\t17.8\n398\t11.44\n399\t12.88\n400\t8.3\n401\t42.3\n402\t6.3\n403\t8.76\n404\t21.3\n405\t8.76\n406\t9.96\n407\t23.3\n408\t7.8\n409\t8.76\n410\t21.3\n411\t17.8\n412\t25.3\n413\t5.8\n414\t7.55\n415\t12.8\n416\t17.3\n417\t7.3\n418\t30.3\n419\t8.76\n420\t16.3\n421\t17.76\n422\t21.3\n423\t40.3\n424\t7.8\n425\t8.75\n426\t11.8\n427\t16.55\n428\t8.15\n429\t6.3\n430\t8.3\n431\t12.05\n432\t18.5\n433\t35.35\n434\t6.8\n435\t6.24\n436\t14.8\n437\t21.84\n438\t11.8\n439\t11.84\n440\t29.3\n441\t6.3\n442\t6.8\n443\t10.8\n444\t13.8\n445\t6.8\n446\t10.8\n447\t8.8\n448\t6.36\n449\t37.3\n450\t8.3\n451\t15.3\n452\t6.24\n453\t13.5\n454\t6.8\n455\t14.76\n456\t32.8\n457\t17.3\n458\t8.8\n459\t10.23\n460\t18.36\n461\t19.12\n462\t13.8\n463\t30.3\n464\t12.8\n465\t10.8\n466\t8.8\n467\t7.8\n468\t6.8\n469\t13.55\n470\t8.8\n471\t6.8\n472\t7.8\n473\t6.3\n474\t16.8\n475\t19.3\n476\t15.95\n477\t17.15\n478\t6.3\n479\t11.3\n480\t17.8\n481\t58.3\n482\t14.76\n483\t4.3\n484\t9.35\n485\t11.8\n486\t9.8\n487\t13.5\n488\t6.6\n489\t14.63\n490\t7.3\n491\t13\n492\t9.3\n493\t41.05\n494\t10.75\n495\t6.2\n496\t14.76\n497\t13.41\n498\t17.76\n499\t7.3\n500\t9.8\n501\t31.97\n502\t14.75\n503\t15.8\n504\t21.36\n505\t11\n506\t22.8\n507\t5.3\n508\t8.75\n509\t6.8\n510\t8.3\n511\t21.8\n512\t6.8\n513\t11.15\n514\t37.55\n515\t30.35\n516\t16.55\n517\t7.55\n518\t4.8\n519\t12.8\n520\t49.26\n521\t17.8\n522\t11.8\n523\t8.8\n524\t9.95\n525\t18.8\n526\t8.75\n527\t8.8\n528\t6.85\n529\t6.3\n530\t5.3\n531\t13.3\n532\t9.3\n533\t6.8\n534\t4.8\n535\t5.3\n536\t30.9\n537\t12.95\n538\t23.16\n539\t15.8\n540\t11.8\n541\t20.8\n542\t9.55\n543\t9.3\n544\t11.75\n545\t17.9\n546\t28.8\n547\t11.3\n548\t43.06\n549\t29.56\n550\t9.3\n551\t25.3\n552\t12.8\n553\t7.8\n554\t40.3\n555\t8.16\n556\t9.8\n557\t7.56\n558\t26.16\n559\t12.95\n560\t14.75\n561\t7.3\n562\t14.76\n563\t26.16\n564\t6.3\n565\t10.56\n566\t23.3\n567\t36.3\n568\t68.56\n569\t8.58\n570\t21.84\n571\t26.15\n572\t24.95\n573\t60.4\n574\t8.75\n575\t11.2\n576\t5.3\n577\t12.35\n578\t8.15\n579\t7.85\n580\t9.8\n581\t18.95\n582\t30.3\n583\t11.4\n584\t12.05\n585\t22.8\n586\t13.39\n587\t8.8\n588\t7.8\n589\t15.36\n590\t6.8\n591\t6.2\n592\t4.8\n593\t75.35\n594\t7.8\n595\t9.8\n596\t19.1\n597\t24.3\n598\t15.3\n599\t18.96\n600\t5.3\n601\t6.8\n602\t29\n603\t5.8\n604\t13.5\n605\t7.85\n606\t6.95\n607\t23.8\n608\t10.55\n609\t17.15\n610\t28.5\n611\t17.8\n612\t28.3\n613\t6.3\n614\t5.3\n615\t41.8\n616\t11.3\n617\t6.3\n618\t10.56\n619\t32.8\n620\t7.3\n621\t15.96\n622\t12.8\n623\t21.36\n624\t9.45\n625\t6.93\n626\t13.55\n627\t6.8\n628\t30.3\n629\t8.75\n630\t7.8\n631\t9.75\n632\t28.3\n633\t5.3\n634\t16.3\n635\t9.35\n636\t19.3\n637\t8.8\n638\t20.8\n639\t18.3\n640\t15.95\n641\t26.15\n642\t14.8\n643\t15.3\n644\t6.95\n645\t11.27\n646\t12.35\n647\t12.8\n648\t8.3\n649\t29.76\n650\t10.3\n651\t12.8\n652\t32.3\n653\t60.66\n654\t6.3\n655\t23.8\n656\t11.75\n657\t6.95\n658\t26.8\n659\t11.15\n660\t36.35\n661\t20.47\n662\t9.75\n663\t9.3\n664\t7.54\n665\t12\n666\t8.5\n667\t6.6\n668\t15.95\n669\t13.3\n670\t19.56\n671\t8.5\n672\t30.96\n673\t18.3\n674\t11.3\n675\t6.3\n676\t20.3\n677\t7.85\n678\t8.5\n679\t6.8\n680\t13.8\n681\t10.56\n682\t20.8\n683\t6.8\n684\t23.8\n685\t21.62\n686\t4.8\n687\t27.8\n688\t6.36\n689\t11.8\n690\t10.8\n691\t4.31\n692\t8.76\n693\t7.55\n694\t12.3\n695\t7.8\n696\t17.8\n697\t5.3\n698\t8.3\n699\t14.16\n700\t15.36\n701\t6.3\n702\t11.3\n703\t11.44\n704\t16.64\n705\t17.8\n706\t16.3\n707\t58.56\n708\t14.8\n709\t10.8\n710\t8.8\n711\t11.8\n712\t3.8\n713\t10.8\n714\t12.7\n715\t15.3\n716\t18.95\n717\t70.26\n718\t6.3\n719\t9.8\n720\t8.15\n721\t19.85\n722\t53.06\n723\t31.55\n724\t10.8\n725\t14.3\n726\t14.15\n727\t5.83\n728\t19.3\n729\t12.95\n730\t9.8\n731\t27.3\n732\t11.75\n733\t23.3\n734\t15.3\n735\t39.96\n736\t18.36\n737\t24.8\n738\t17.16\n739\t42.3\n740\t6.35\n741\t6.8\n742\t5.3\n743\t8.8\n744\t23.3\n745\t43.94\n746\t12.7\n747\t14.76\n748\t5.8\n749\t9.8\n750\t17.8\n751\t10.8\n752\t6.62\n753\t11.16\n754\t4.8\n755\t32.8\n756\t9.8\n757\t10.3\n758\t5.8\n759\t9.1\n760\t23.8\n761\t19.3\n762\t3.8\n763\t6.96\n764\t22.8\n765\t24.4\n766\t23.3\n767\t18.55\n768\t34.3\n769\t14.76\n770\t12.35\n771\t7.55\n772\t8.3\n773\t21.05\n774\t5.3\n775\t7.8\n776\t6.3\n777\t16.3\n778\t13.8\n779\t35.8\n780\t70.35\n781\t14.3\n782\t29.8\n783\t17.85\n784\t23.3\n785\t7.8\n786\t7.8\n787\t24.3\n788\t5.3\n789\t10.75\n790\t15.95\n791\t34.3\n792\t17.3\n793\t8.3\n794\t16.8\n795\t34.56\n796\t11.15\n797\t9.3\n798\t29.8\n799\t14.8\n800\t19.56\n801\t9.3\n802\t23.3\n803\t11.3\n804\t30.3\n805\t24.35\n806\t6.6\n807\t9.8\n808\t18.8\n809\t7.3\n810\t18.8\n811\t43.3\n812\t18.8\n813\t11\n814\t23.3\n815\t7.8\n816\t11.3\n817\t8.8\n818\t8.15\n819\t19.3\n820\t13.56\n821\t20.76\n822\t5.3\n823\t16.56\n824\t6.96\n825\t23.16\n826\t21.35\n827\t21.6\n828\t39.35\n829\t6.3\n830\t19.2\n831\t7.3\n832\t9.35\n833\t13.5\n834\t10.8\n835\t15.3\n836\t5.3\n837\t12.8\n838\t23.15\n839\t21.3\n840\t6.8\n841\t-12.3\n842\t12.3\n843\t41.3\n844\t19.75\n845\t6.89\n846\t11.31\n847\t35.3\n848\t11.3\n849\t8.8\n850\t6.3\n851\t10.38\n852\t12.8\n853\t12.36\n854\t42.35\n855\t14.16\n856\t16\n857\t14.04\n858\t7.8\n859\t6.8\n860\t17.3\n861\t16.3\n862\t7.55\n863\t21.3\n864\t8.3\n865\t12.36\n866\t12.3\n867\t9.35\n868\t18.95\n869\t25.3\n870\t14.8\n871\t12.96\n872\t12.3\n873\t15.87\n874\t18.8\n875\t11.8\n876\t33.5\n877\t12.8\n878\t28.7\n879\t7.3\n880\t17.3\n881\t24.3\n882\t7.8\n883\t19.1\n884\t9.3\n885\t8.75\n886\t23.75\n887\t8.19\n888\t15.38\n889\t11.3\n890\t5.76\n891\t33.3\n892\t13.3\n893\t10.3\n894\t20.75\n895\t20.15\n896\t7.85\n897\t5.75\n898\t7.3\n899\t33.06\n900\t5.8\n901\t8.15\n902\t14.8\n903\t17.3\n904\t18.3\n905\t11.91\n906\t11.76\n907\t10.8\n908\t7.88\n909\t14.04\n910\t4.8\n911\t18.3\n912\t36.36\n913\t43.3\n914\t17.9\n915\t9.95\n916\t7.3\n917\t10.56\n918\t13.56\n919\t8.16\n920\t10.12\n921\t14.3\n922\t34.8\n923\t36.8\n924\t12.3\n925\t12.8\n926\t17.16\n927\t15.36\n928\t11\n929\t14.16\n930\t6.8\n931\t9.3\n932\t6.8\n933\t11.3\n934\t24.8\n935\t10.1\n936\t12.8\n937\t8.97\n938\t17.75\n939\t14.75\n940\t14.8\n941\t37.25\n942\t7.54\n943\t13.8\n944\t5.8\n945\t9.36\n946\t11.3\n947\t5.3\n948\t6.3\n949\t12.8\n950\t8.3\n951\t8.76\n952\t15.3\n953\t5.8\n954\t9.3\n955\t24.96\n956\t17.16\n957\t22.8\n958\t52.8\n959\t9\n960\t20.3\n961\t15.3\n962\t22.3\n963\t10.8\n964\t10.79\n965\t28.56\n966\t36.96\n967\t8\n968\t6.3\n969\t5.76\n970\t34.27\n971\t7.56\n972\t11.76\n973\t18.8\n974\t23.8\n975\t13.8\n976\t30.8\n977\t5.3\n978\t12.8\n979\t12.35\n980\t17.8\n981\t10.3\n982\t5.8\n983\t8.15\n984\t13.57\n985\t63.35\n986\t20\n987\t8.16\n988\t13.56\n989\t34.8\n990\t10.3\n991\t7.56\n992\t8.76\n993\t13.56\n994\t15.8\n995\t29.67\n996\t13.56\n997\t18.36\n998\t6.95\n999\t20.3\n1000\t15.95\n"
          },
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"result-alert alert-warning\" role\u003d\"alert\"\u003e\u003cbutton type\u003d\"button\" class\u003d\"close\" data-dismiss\u003d\"alert\" aria-label\u003d\"Close\"\u003e\u003cspan aria-hidden\u003d\"true\"\u003e\u0026times;\u003c/span\u003e\u003c/button\u003e\u003cstrong\u003eOutput is truncated\u003c/strong\u003e to 1000 rows. Learn more about \u003cstrong\u003ezeppelin.spark.maxResult\u003c/strong\u003e\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1542841596937_-332302088",
      "id": "20181121-175823_608162984",
      "dateCreated": "2018-11-21 23:06:36.937",
      "dateStarted": "2018-11-21 23:32:07.115",
      "dateFinished": "2018-11-21 23:32:07.401",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.sql\nselect *\nfrom zone_data",
      "user": "admin",
      "dateUpdated": "2018-11-22 00:00:38.615",
      "config": {
        "colWidth": 3.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "pieChart",
              "height": 300.0,
              "optionOpen": true,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "LocationID": "string",
                      "Borough": "string",
                      "Zone": "string",
                      "service_zone": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "pieChart": {}
              },
              "commonSetting": {},
              "keys": [],
              "groups": [],
              "values": []
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "LocationID\tBorough\tZone\tservice_zone\n1\tEWR\tNewark Airport\tEWR\n2\tQueens\tJamaica Bay\tBoro Zone\n3\tBronx\tAllerton/Pelham Gardens\tBoro Zone\n4\tManhattan\tAlphabet City\tYellow Zone\n5\tStaten Island\tArden Heights\tBoro Zone\n6\tStaten Island\tArrochar/Fort Wadsworth\tBoro Zone\n7\tQueens\tAstoria\tBoro Zone\n8\tQueens\tAstoria Park\tBoro Zone\n9\tQueens\tAuburndale\tBoro Zone\n10\tQueens\tBaisley Park\tBoro Zone\n11\tBrooklyn\tBath Beach\tBoro Zone\n12\tManhattan\tBattery Park\tYellow Zone\n13\tManhattan\tBattery Park City\tYellow Zone\n14\tBrooklyn\tBay Ridge\tBoro Zone\n15\tQueens\tBay Terrace/Fort Totten\tBoro Zone\n16\tQueens\tBayside\tBoro Zone\n17\tBrooklyn\tBedford\tBoro Zone\n18\tBronx\tBedford Park\tBoro Zone\n19\tQueens\tBellerose\tBoro Zone\n20\tBronx\tBelmont\tBoro Zone\n21\tBrooklyn\tBensonhurst East\tBoro Zone\n22\tBrooklyn\tBensonhurst West\tBoro Zone\n23\tStaten Island\tBloomfield/Emerson Hill\tBoro Zone\n24\tManhattan\tBloomingdale\tYellow Zone\n25\tBrooklyn\tBoerum Hill\tBoro Zone\n26\tBrooklyn\tBorough Park\tBoro Zone\n27\tQueens\tBreezy Point/Fort Tilden/Riis Beach\tBoro Zone\n28\tQueens\tBriarwood/Jamaica Hills\tBoro Zone\n29\tBrooklyn\tBrighton Beach\tBoro Zone\n30\tQueens\tBroad Channel\tBoro Zone\n31\tBronx\tBronx Park\tBoro Zone\n32\tBronx\tBronxdale\tBoro Zone\n33\tBrooklyn\tBrooklyn Heights\tBoro Zone\n34\tBrooklyn\tBrooklyn Navy Yard\tBoro Zone\n35\tBrooklyn\tBrownsville\tBoro Zone\n36\tBrooklyn\tBushwick North\tBoro Zone\n37\tBrooklyn\tBushwick South\tBoro Zone\n38\tQueens\tCambria Heights\tBoro Zone\n39\tBrooklyn\tCanarsie\tBoro Zone\n40\tBrooklyn\tCarroll Gardens\tBoro Zone\n41\tManhattan\tCentral Harlem\tBoro Zone\n42\tManhattan\tCentral Harlem North\tBoro Zone\n43\tManhattan\tCentral Park\tYellow Zone\n44\tStaten Island\tCharleston/Tottenville\tBoro Zone\n45\tManhattan\tChinatown\tYellow Zone\n46\tBronx\tCity Island\tBoro Zone\n47\tBronx\tClaremont/Bathgate\tBoro Zone\n48\tManhattan\tClinton East\tYellow Zone\n49\tBrooklyn\tClinton Hill\tBoro Zone\n50\tManhattan\tClinton West\tYellow Zone\n51\tBronx\tCo-Op City\tBoro Zone\n52\tBrooklyn\tCobble Hill\tBoro Zone\n53\tQueens\tCollege Point\tBoro Zone\n54\tBrooklyn\tColumbia Street\tBoro Zone\n55\tBrooklyn\tConey Island\tBoro Zone\n56\tQueens\tCorona\tBoro Zone\n57\tQueens\tCorona\tBoro Zone\n58\tBronx\tCountry Club\tBoro Zone\n59\tBronx\tCrotona Park\tBoro Zone\n60\tBronx\tCrotona Park East\tBoro Zone\n61\tBrooklyn\tCrown Heights North\tBoro Zone\n62\tBrooklyn\tCrown Heights South\tBoro Zone\n63\tBrooklyn\tCypress Hills\tBoro Zone\n64\tQueens\tDouglaston\tBoro Zone\n65\tBrooklyn\tDowntown Brooklyn/MetroTech\tBoro Zone\n66\tBrooklyn\tDUMBO/Vinegar Hill\tBoro Zone\n67\tBrooklyn\tDyker Heights\tBoro Zone\n68\tManhattan\tEast Chelsea\tYellow Zone\n69\tBronx\tEast Concourse/Concourse Village\tBoro Zone\n70\tQueens\tEast Elmhurst\tBoro Zone\n71\tBrooklyn\tEast Flatbush/Farragut\tBoro Zone\n72\tBrooklyn\tEast Flatbush/Remsen Village\tBoro Zone\n73\tQueens\tEast Flushing\tBoro Zone\n74\tManhattan\tEast Harlem North\tBoro Zone\n75\tManhattan\tEast Harlem South\tBoro Zone\n76\tBrooklyn\tEast New York\tBoro Zone\n77\tBrooklyn\tEast New York/Pennsylvania Avenue\tBoro Zone\n78\tBronx\tEast Tremont\tBoro Zone\n79\tManhattan\tEast Village\tYellow Zone\n80\tBrooklyn\tEast Williamsburg\tBoro Zone\n81\tBronx\tEastchester\tBoro Zone\n82\tQueens\tElmhurst\tBoro Zone\n83\tQueens\tElmhurst/Maspeth\tBoro Zone\n84\tStaten Island\tEltingville/Annadale/Prince\u0027s Bay\tBoro Zone\n85\tBrooklyn\tErasmus\tBoro Zone\n86\tQueens\tFar Rockaway\tBoro Zone\n87\tManhattan\tFinancial District North\tYellow Zone\n88\tManhattan\tFinancial District South\tYellow Zone\n89\tBrooklyn\tFlatbush/Ditmas Park\tBoro Zone\n90\tManhattan\tFlatiron\tYellow Zone\n91\tBrooklyn\tFlatlands\tBoro Zone\n92\tQueens\tFlushing\tBoro Zone\n93\tQueens\tFlushing Meadows-Corona Park\tBoro Zone\n94\tBronx\tFordham South\tBoro Zone\n95\tQueens\tForest Hills\tBoro Zone\n96\tQueens\tForest Park/Highland Park\tBoro Zone\n97\tBrooklyn\tFort Greene\tBoro Zone\n98\tQueens\tFresh Meadows\tBoro Zone\n99\tStaten Island\tFreshkills Park\tBoro Zone\n100\tManhattan\tGarment District\tYellow Zone\n101\tQueens\tGlen Oaks\tBoro Zone\n102\tQueens\tGlendale\tBoro Zone\n103\tManhattan\tGovernor\u0027s Island/Ellis Island/Liberty Island\tYellow Zone\n104\tManhattan\tGovernor\u0027s Island/Ellis Island/Liberty Island\tYellow Zone\n105\tManhattan\tGovernor\u0027s Island/Ellis Island/Liberty Island\tYellow Zone\n106\tBrooklyn\tGowanus\tBoro Zone\n107\tManhattan\tGramercy\tYellow Zone\n108\tBrooklyn\tGravesend\tBoro Zone\n109\tStaten Island\tGreat Kills\tBoro Zone\n110\tStaten Island\tGreat Kills Park\tBoro Zone\n111\tBrooklyn\tGreen-Wood Cemetery\tBoro Zone\n112\tBrooklyn\tGreenpoint\tBoro Zone\n113\tManhattan\tGreenwich Village North\tYellow Zone\n114\tManhattan\tGreenwich Village South\tYellow Zone\n115\tStaten Island\tGrymes Hill/Clifton\tBoro Zone\n116\tManhattan\tHamilton Heights\tBoro Zone\n117\tQueens\tHammels/Arverne\tBoro Zone\n118\tStaten Island\tHeartland Village/Todt Hill\tBoro Zone\n119\tBronx\tHighbridge\tBoro Zone\n120\tManhattan\tHighbridge Park\tBoro Zone\n121\tQueens\tHillcrest/Pomonok\tBoro Zone\n122\tQueens\tHollis\tBoro Zone\n123\tBrooklyn\tHomecrest\tBoro Zone\n124\tQueens\tHoward Beach\tBoro Zone\n125\tManhattan\tHudson Sq\tYellow Zone\n126\tBronx\tHunts Point\tBoro Zone\n127\tManhattan\tInwood\tBoro Zone\n128\tManhattan\tInwood Hill Park\tBoro Zone\n129\tQueens\tJackson Heights\tBoro Zone\n130\tQueens\tJamaica\tBoro Zone\n131\tQueens\tJamaica Estates\tBoro Zone\n132\tQueens\tJFK Airport\tAirports\n133\tBrooklyn\tKensington\tBoro Zone\n134\tQueens\tKew Gardens\tBoro Zone\n135\tQueens\tKew Gardens Hills\tBoro Zone\n136\tBronx\tKingsbridge Heights\tBoro Zone\n137\tManhattan\tKips Bay\tYellow Zone\n138\tQueens\tLaGuardia Airport\tAirports\n139\tQueens\tLaurelton\tBoro Zone\n140\tManhattan\tLenox Hill East\tYellow Zone\n141\tManhattan\tLenox Hill West\tYellow Zone\n142\tManhattan\tLincoln Square East\tYellow Zone\n143\tManhattan\tLincoln Square West\tYellow Zone\n144\tManhattan\tLittle Italy/NoLiTa\tYellow Zone\n145\tQueens\tLong Island City/Hunters Point\tBoro Zone\n146\tQueens\tLong Island City/Queens Plaza\tBoro Zone\n147\tBronx\tLongwood\tBoro Zone\n148\tManhattan\tLower East Side\tYellow Zone\n149\tBrooklyn\tMadison\tBoro Zone\n150\tBrooklyn\tManhattan Beach\tBoro Zone\n151\tManhattan\tManhattan Valley\tYellow Zone\n152\tManhattan\tManhattanville\tBoro Zone\n153\tManhattan\tMarble Hill\tBoro Zone\n154\tBrooklyn\tMarine Park/Floyd Bennett Field\tBoro Zone\n155\tBrooklyn\tMarine Park/Mill Basin\tBoro Zone\n156\tStaten Island\tMariners Harbor\tBoro Zone\n157\tQueens\tMaspeth\tBoro Zone\n158\tManhattan\tMeatpacking/West Village West\tYellow Zone\n159\tBronx\tMelrose South\tBoro Zone\n160\tQueens\tMiddle Village\tBoro Zone\n161\tManhattan\tMidtown Center\tYellow Zone\n162\tManhattan\tMidtown East\tYellow Zone\n163\tManhattan\tMidtown North\tYellow Zone\n164\tManhattan\tMidtown South\tYellow Zone\n165\tBrooklyn\tMidwood\tBoro Zone\n166\tManhattan\tMorningside Heights\tBoro Zone\n167\tBronx\tMorrisania/Melrose\tBoro Zone\n168\tBronx\tMott Haven/Port Morris\tBoro Zone\n169\tBronx\tMount Hope\tBoro Zone\n170\tManhattan\tMurray Hill\tYellow Zone\n171\tQueens\tMurray Hill-Queens\tBoro Zone\n172\tStaten Island\tNew Dorp/Midland Beach\tBoro Zone\n173\tQueens\tNorth Corona\tBoro Zone\n174\tBronx\tNorwood\tBoro Zone\n175\tQueens\tOakland Gardens\tBoro Zone\n176\tStaten Island\tOakwood\tBoro Zone\n177\tBrooklyn\tOcean Hill\tBoro Zone\n178\tBrooklyn\tOcean Parkway South\tBoro Zone\n179\tQueens\tOld Astoria\tBoro Zone\n180\tQueens\tOzone Park\tBoro Zone\n181\tBrooklyn\tPark Slope\tBoro Zone\n182\tBronx\tParkchester\tBoro Zone\n183\tBronx\tPelham Bay\tBoro Zone\n184\tBronx\tPelham Bay Park\tBoro Zone\n185\tBronx\tPelham Parkway\tBoro Zone\n186\tManhattan\tPenn Station/Madison Sq West\tYellow Zone\n187\tStaten Island\tPort Richmond\tBoro Zone\n188\tBrooklyn\tProspect-Lefferts Gardens\tBoro Zone\n189\tBrooklyn\tProspect Heights\tBoro Zone\n190\tBrooklyn\tProspect Park\tBoro Zone\n191\tQueens\tQueens Village\tBoro Zone\n192\tQueens\tQueensboro Hill\tBoro Zone\n193\tQueens\tQueensbridge/Ravenswood\tBoro Zone\n194\tManhattan\tRandalls Island\tYellow Zone\n195\tBrooklyn\tRed Hook\tBoro Zone\n196\tQueens\tRego Park\tBoro Zone\n197\tQueens\tRichmond Hill\tBoro Zone\n198\tQueens\tRidgewood\tBoro Zone\n199\tBronx\tRikers Island\tBoro Zone\n200\tBronx\tRiverdale/North Riverdale/Fieldston\tBoro Zone\n201\tQueens\tRockaway Park\tBoro Zone\n202\tManhattan\tRoosevelt Island\tBoro Zone\n203\tQueens\tRosedale\tBoro Zone\n204\tStaten Island\tRossville/Woodrow\tBoro Zone\n205\tQueens\tSaint Albans\tBoro Zone\n206\tStaten Island\tSaint George/New Brighton\tBoro Zone\n207\tQueens\tSaint Michaels Cemetery/Woodside\tBoro Zone\n208\tBronx\tSchuylerville/Edgewater Park\tBoro Zone\n209\tManhattan\tSeaport\tYellow Zone\n210\tBrooklyn\tSheepshead Bay\tBoro Zone\n211\tManhattan\tSoHo\tYellow Zone\n212\tBronx\tSoundview/Bruckner\tBoro Zone\n213\tBronx\tSoundview/Castle Hill\tBoro Zone\n214\tStaten Island\tSouth Beach/Dongan Hills\tBoro Zone\n215\tQueens\tSouth Jamaica\tBoro Zone\n216\tQueens\tSouth Ozone Park\tBoro Zone\n217\tBrooklyn\tSouth Williamsburg\tBoro Zone\n218\tQueens\tSpringfield Gardens North\tBoro Zone\n219\tQueens\tSpringfield Gardens South\tBoro Zone\n220\tBronx\tSpuyten Duyvil/Kingsbridge\tBoro Zone\n221\tStaten Island\tStapleton\tBoro Zone\n222\tBrooklyn\tStarrett City\tBoro Zone\n223\tQueens\tSteinway\tBoro Zone\n224\tManhattan\tStuy Town/Peter Cooper Village\tYellow Zone\n225\tBrooklyn\tStuyvesant Heights\tBoro Zone\n226\tQueens\tSunnyside\tBoro Zone\n227\tBrooklyn\tSunset Park East\tBoro Zone\n228\tBrooklyn\tSunset Park West\tBoro Zone\n229\tManhattan\tSutton Place/Turtle Bay North\tYellow Zone\n230\tManhattan\tTimes Sq/Theatre District\tYellow Zone\n231\tManhattan\tTriBeCa/Civic Center\tYellow Zone\n232\tManhattan\tTwo Bridges/Seward Park\tYellow Zone\n233\tManhattan\tUN/Turtle Bay South\tYellow Zone\n234\tManhattan\tUnion Sq\tYellow Zone\n235\tBronx\tUniversity Heights/Morris Heights\tBoro Zone\n236\tManhattan\tUpper East Side North\tYellow Zone\n237\tManhattan\tUpper East Side South\tYellow Zone\n238\tManhattan\tUpper West Side North\tYellow Zone\n239\tManhattan\tUpper West Side South\tYellow Zone\n240\tBronx\tVan Cortlandt Park\tBoro Zone\n241\tBronx\tVan Cortlandt Village\tBoro Zone\n242\tBronx\tVan Nest/Morris Park\tBoro Zone\n243\tManhattan\tWashington Heights North\tBoro Zone\n244\tManhattan\tWashington Heights South\tBoro Zone\n245\tStaten Island\tWest Brighton\tBoro Zone\n246\tManhattan\tWest Chelsea/Hudson Yards\tYellow Zone\n247\tBronx\tWest Concourse\tBoro Zone\n248\tBronx\tWest Farms/Bronx River\tBoro Zone\n249\tManhattan\tWest Village\tYellow Zone\n250\tBronx\tWestchester Village/Unionport\tBoro Zone\n251\tStaten Island\tWesterleigh\tBoro Zone\n252\tQueens\tWhitestone\tBoro Zone\n253\tQueens\tWillets Point\tBoro Zone\n254\tBronx\tWilliamsbridge/Olinville\tBoro Zone\n255\tBrooklyn\tWilliamsburg (North Side)\tBoro Zone\n256\tBrooklyn\tWilliamsburg (South Side)\tBoro Zone\n257\tBrooklyn\tWindsor Terrace\tBoro Zone\n258\tQueens\tWoodhaven\tBoro Zone\n259\tBronx\tWoodlawn/Wakefield\tBoro Zone\n260\tQueens\tWoodside\tBoro Zone\n261\tManhattan\tWorld Trade Center\tYellow Zone\n262\tManhattan\tYorkville East\tYellow Zone\n263\tManhattan\tYorkville West\tYellow Zone\n264\tUnknown\tNV\tN/A\n265\tUnknown\tNA\tN/A\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1542844412454_197666846",
      "id": "20181121-235332_1967238628",
      "dateCreated": "2018-11-21 23:53:32.455",
      "dateStarted": "2018-11-21 23:58:00.373",
      "dateFinished": "2018-11-21 23:58:00.408",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "user": "admin",
      "dateUpdated": "2018-11-21 23:53:49.483",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 3.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1542841596938_845281475",
      "id": "20150703-133047_853701097",
      "dateCreated": "2018-11-21 23:06:36.938",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "NYC-TLC Project HPC",
  "id": "2DVBFPSZ9",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}